...............................................................................
Cmdliner - %%SYNOPSIS%%
           Release %%VERSION%%
...............................................................................

Cmdliner is a module for the declarative definition of command line
interfaces.

It provides a simple and compositional mechanism to convert command
line arguments to OCaml values and pass them to your functions. The
module automatically handles syntax errors, help messages and UNIX man
page generation. It supports programs with single or multiple commands
(like darcs or git) and respects most of the POSIX and GNU
conventions.

Cmdliner is made of a single independent module and distributed under
the BSD3 license.

Project home page : http://erratique.ch/software/cmdliner
Contact : daniel.buenzl i@erratique.ch


# Installation

Cmdliner was tested with OCaml 3.12 (but it should compile on earlier
versions). cmdliner.mli and cmdliner.ml contain everything, the code,
the documentation and the license. You can just copy them to your
project directory or better, if you use ocamlbuild, issue the
following commands from the root directory of your project :

  > ln -s /path/to/cmdliner-%%VERSION%%/src cmdliner
  > echo "<cmdliner> : include" >> _tags

The documentation is generated by ocamldoc from cmdliner.mli. You can
find a generated version in the doc/ directory of the distribution.

If you have ocamlbuild, Cmdliner can be installed in the $INSTALLDIR
directory by typing :
 
  > ./build 
  > INSTALLDIR=/path/to/install/dir ./build install 

if $INSTALLDIR is left unspecified, `ocamlc -where`/cmdliner is used.

Test and example programs are provided in the test/ directory. OCaml
3.12 is needed to build them. They define the command line of some
classic programs. They can be built with :

  > ./build tests.otarget

The resulting binaries are in _build/test/